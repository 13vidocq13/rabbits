@model BusonessLogic.Help.Types.ChildBirthParrents

@{
    ViewBag.Title = "Редактировать детей";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Редактировать детей</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Редактировать детей</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.Label("Самка", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ddlFemale", (IEnumerable<SelectListItem>)ViewData["femalesDdl"])
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Номер клетки", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CageNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CageNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Самец1", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ddlMale1", (IEnumerable<SelectListItem>)ViewData["malesDdl1"])
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Дата 1го спаривания", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Самец2", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ddlMale2", (IEnumerable<SelectListItem>)ViewData["malesDdl2"])
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Дата 2го контакта", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Предположительная дата рождения", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpectBirthday, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpectBirthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Дата рождения", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Результат", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ddlResult", (IEnumerable<SelectListItem>)ViewData["resultsDdl"])
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Заметки", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Сохранить" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Назад", "ShowChildBirth")
    </div>
</body>
</html>
